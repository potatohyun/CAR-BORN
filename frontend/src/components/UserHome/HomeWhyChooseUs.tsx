/** @jsxImportSource @emotion/react */
import { css } from "@emotion/react";
import { useRef } from "react";
import { useEffect } from "react";
import { gsap, ScrollTrigger } from "gsap/all";
interface DataType {
  url: any;
  descripton: string;
}

const container = css`
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh;
  width: 100%;
  .header {
    height: 10vh;
    width: 100%;
    display: flex;
    margin-top: 100px;
    justify-content: center;
    p {
      margin: 20px 0 0 0;
      font-size: 1.7rem;
      font-weight: bolder;
    }
  }

  .elements {
    height: auto;
    width: 80%;
  }
  .section {
    display: flex;
    height: 30vh;
    width: 100%;
  }
  .chooseCard {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    height: 100%;
    padding: 0 50px 0 50px;
    p {
      margin: 20px 0 0 0;
      font-size: 1.2rem;
    }
  }
  svg {
    width: 5vw;
  }

  hr {
    width: 10%;
    height: 3px;
    background-color: #d23131;
    margin-bottom: 40px;
  }

  @keyframes ani {
    0% {
      stroke-dashoffset: 500;
    }
    50% {
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dashoffset: -500;
    }
  }
  .cls-1,
  .cls-3 {
    fill: none;
    stroke: #353535;
    stroke-width: 2px;
  }

  .cls-1 {
    stroke-linecap: round;
    stroke-linejoin: round;
  }

  .cls-2 {
    fill: #353535;
  }

  .cls-3 {
    stroke-miterlimit: 10;
  }
`;

export default function HomeWhyCooseUs() {
  const containerRef = useRef(null);

  const icon0 = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="120"
      id="svg2"
      viewBox="0 0 32 32.000001"
    >
      <defs id="defs4" />
      <g id="layer1" transform="translate(0,-1020.3622)">
        <path d="m 4.4901,1029.874 c -1.01246,-0.1193 -1.92785,0.6563 -1.99685,1.68 l -0.47442,7.0856 c -0.1367,2.0346 0.48086,3.9806 1.46604,5.7025 l 3.58344,6.2651 a 0.4978042,0.50016316 0 1 0 0.8633,-0.4982 l -3.58345,-6.2651 c -0.91327,-1.5962 -1.456,-3.3464 -1.33577,-5.1359 l 0.47443,-7.0875 c 0.0317,-0.4701 0.42441,-0.7954 0.8769,-0.7483 0.30597,0.052 0.45943,0.1698 0.56581,0.3224 0.10823,0.1552 0.15659,0.3646 0.15555,0.5235 a 0.4978042,0.50016316 0 0 0 0,0.01 c 0.0114,1.0348 0.0236,2.0694 0.0349,3.1042 a 0.4978042,0.50016316 0 1 0 0.99551,-0.012 c -0.0113,-1.0323 -0.0236,-2.0642 -0.0349,-3.0964 0.002,-0.3477 -0.0865,-0.7433 -0.33638,-1.1018 -0.24992,-0.3585 -0.67712,-0.6562 -1.23467,-0.7443 a 0.4978042,0.50016316 0 0 0 -0.0194,0 z" />
        <path d="m 5.93982,1036.0277 -0.33203,0.1132 c -0.002,0 -0.004,0 -0.006,0 -0.93596,0.3301 -1.42578,1.3776 -1.08789,2.3125 l 1.72266,4.7656 c 0.22653,0.6276 1.16793,0.2878 0.9414,-0.3398 l -1.72265,-4.7657 c -0.15437,-0.4271 0.061,-0.882 0.47851,-1.0293 0.11175,-0.04 0.22867,-0.076 0.34003,-0.1132 0.42645,-0.1505 0.88148,0.066 1.03906,0.502 l 1.13086,3.1289 c 0.0294,0.081 0.0792,0.1529 0.14453,0.209 l 2.43359,2.082 c 0.63604,0.544 1.08278,1.2822 1.26953,2.1035 l 0.71289,3.1367 c 0.12589,0.6827 1.15511,0.4496 0.97461,-0.2207 l -0.71289,-3.1367 c -0.23423,-1.0301 -0.79349,-1.9581 -1.59375,-2.6426 l -2.33398,-1.9961 -1.08399,-3.0039 c -0.3382,-0.9357 -1.37782,-1.4359 -2.31445,-1.1054 z" />
        <path d="m 15.99995,1021.8622 c -4.41236,0 -8,3.5876 -8,8 0,4.4123 3.58764,8 8,8 4.41236,0 8,-3.5877 8,-8 0,-4.4124 -3.58764,-8 -8,-8 z m 0,1 c 3.87192,0 7,3.1281 7,7 0,3.8719 -3.12808,7 -7,7 -3.87192,0 -7,-3.1281 -7,-7 0,-3.8719 3.12808,-7 7,-7 z" />
        <path d="m 15.99995,1021.8622 c -1.36611,0 -2.51377,1.0102 -3.29492,2.4609 -0.78115,1.4507 -1.24414,3.3953 -1.24414,5.5391 0,2.1438 0.46299,4.0903 1.24414,5.541 0.78115,1.4507 1.92881,2.459 3.29492,2.459 1.36611,0 2.51377,-1.0083 3.29492,-2.459 0.78115,-1.4507 1.24414,-3.3972 1.24414,-5.541 0,-2.1438 -0.46299,-4.0884 -1.24414,-5.5391 -0.78115,-1.4507 -1.92881,-2.4609 -3.29492,-2.4609 z m 0,1 c 0.86427,0 1.73553,0.6698 2.41602,1.9336 0.68048,1.2637 1.12304,3.0681 1.12304,5.0664 0,1.9983 -0.44256,3.8026 -1.12304,5.0664 -0.68049,1.2638 -1.55175,1.9336 -2.41602,1.9336 -0.86427,0 -1.73553,-0.6698 -2.41602,-1.9336 -0.68048,-1.2638 -1.12304,-3.0681 -1.12304,-5.0664 0,-1.9983 0.44256,-3.8027 1.12304,-5.0664 0.68049,-1.2638 1.55175,-1.9336 2.41602,-1.9336 z" />
        <path d="m 15.49995,1022.3622 0,15 1,0 0,-15 z" />
        <path d="m 8.99995,1026.3622 0,1 13.8457,0 0,-1 z" />
        <path d="m 8.99995,1032.3622 0,1 13.8457,0 0,-1 z" />

        <path d="m 27.5099,1029.874 c 1.01246,-0.1193 1.92785,0.6563 1.99685,1.68 l 0.47442,7.0856 c 0.1367,2.0346 -0.48086,3.9806 -1.46604,5.7025 l -3.58344,6.2651 a 0.4978042,0.50016316 0 1 1 -0.8633,-0.4982 l 3.58345,-6.2651 c 0.91327,-1.5962 1.456,-3.3464 1.33577,-5.1359 l -0.47443,-7.0875 c -0.0317,-0.4701 -0.42441,-0.7954 -0.8769,-0.7483 -0.30597,0.052 -0.45943,0.1698 -0.56581,0.3224 -0.10823,0.1552 -0.15659,0.3646 -0.15555,0.5235 a 0.4978042,0.50016316 0 0 1 0,0.01 c -0.0114,1.0348 -0.0236,2.0694 -0.0349,3.1042 a 0.4978042,0.50016316 0 1 1 -0.99551,-0.012 c 0.0113,-1.0323 0.0236,-2.0642 0.0349,-3.0964 -0.002,-0.3477 0.0865,-0.7433 0.33638,-1.1018 0.24992,-0.3585 0.67712,-0.6562 1.23467,-0.7443 a 0.4978042,0.50016316 0 0 1 0.0194,0 z" />
        <path d="m 26.06018,1036.0277 0.33203,0.1132 c 0.002,0 0.004,0 0.006,0 0.93596,0.3301 1.42578,1.3776 1.08789,2.3125 l -1.72266,4.7656 c -0.22653,0.6276 -1.16793,0.2878 -0.9414,-0.3398 l 1.72265,-4.7657 c 0.15437,-0.4271 -0.061,-0.882 -0.47851,-1.0293 -0.11175,-0.04 -0.22867,-0.076 -0.34003,-0.1132 -0.42645,-0.1505 -0.88148,0.066 -1.03906,0.502 l -1.13086,3.1289 c -0.0294,0.081 -0.0792,0.1529 -0.14453,0.209 l -2.43359,2.082 c -0.63604,0.544 -1.08278,1.2822 -1.26953,2.1035 l -0.71289,3.1367 c -0.12589,0.6827 -1.15511,0.4496 -0.97461,-0.2207 l 0.71289,-3.1367 c 0.23423,-1.0301 0.79349,-1.9581 1.59375,-2.6426 l 2.33398,-1.9961 1.08399,-3.0039 c 0.3382,-0.9357 1.37782,-1.4359 2.31445,-1.1054 z" />
      </g>
    </svg>
  );
  const icon1 = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      data-name="Layer 1"
      id="Layer_1"
      viewBox="0 0 48 48"
      width="120"
      height="120"
    >
      <title />
      <g>
        <polyline
          className="cls-1"
          points="34.083 42 1 42 1 4 47 4 47 42 44.333 42"
        />
        <circle className="cls-2" cx="5" cy="10" r="1" />
        <circle className="cls-2" cx="8" cy="10" r="1" />
        <circle className="cls-2" cx="11" cy="10" r="1" />
        <line className="cls-1" x1="15" x2="47" y1="10" y2="10" />
      </g>
      <g>
        <circle className="cls-3" cx="24" cy="26" r="11" />
        <line className="cls-1" x1="32" x2="45" y1="34" y2="47.00678" />
      </g>
    </svg>
  );
  const icon2 = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      id="Layer_1"
      version="1.1"
      viewBox="0 0 512 512"
      width="120"
      height="120"
    >
      <style type="text/css"></style>
      <g>
        <path d="M24.6,273v51h144.8c8.4-3.5,17.3-5.3,26.5-5.3c9.2,0,18.1,1.8,26.5,5.3h144.9V102.7H194.8   C100.8,102.7,24.6,178.9,24.6,273z M246.6,154.8h68.6V286h-68.6V154.8z M195.9,286H76.6v-13c0-65.2,53-118.2,118.2-118.2h1.1V286z" />
        <path d="M24.6,338v49.8h102.3c0-19,7.9-36.9,21.2-49.8H24.6z" />
        <path d="M265,387.8h102.3V338H243.8C257.1,350.8,265,368.8,265,387.8z" />
        <path d="M482.3,373.8h-77V142h-23.9v245.8h5.2c0,0,0,0,0,0h95.8c2.9,0,5.2-3.1,5.2-7S485.1,373.8,482.3,373.8z" />
        <path d="M219.5,338c-7.1-3.4-15.1-5.3-23.6-5.3s-16.4,1.9-23.6,5.3c-18.6,8.8-31.5,27.8-31.5,49.8   c0,30.4,24.6,55.1,55.1,55.1c30.4,0,55.1-24.6,55.1-55.1C251,365.8,238.1,346.8,219.5,338z M195.9,409.6c-12,0-21.8-9.7-21.8-21.8   c0-8.7,5.1-16.2,12.5-19.7c2.8-1.3,6-2.1,9.3-2.1c3.3,0,6.5,0.7,9.3,2.1c7.4,3.5,12.5,11,12.5,19.7   C217.7,399.8,208,409.6,195.9,409.6z" />
        <rect height="19.6" width="71.3" x="272.7" y="69.2" />
      </g>
    </svg>
  );
  const icon3 = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      id="Layer_1"
      viewBox="0 0 128 128"
      height="120"
      width="120"
    >
      <g>
        <polygon points="91,45 83,45 83,73 73,73 73,119 61,119 61,73 51,73 51,45 43,45 43,81 53,81 53,127 81,127 81,81 91,81  " />
        <path d="M53,15c0,7.7,6.3,14,14,14s14-6.3,14-14S74.7,1,67,1S53,7.3,53,15z M73,15c0,3.3-2.7,6-6,6s-6-2.7-6-6s2.7-6,6-6   S73,11.7,73,15z" />
        <path d="M19,25c0,7.7,6.3,14,14,14s14-6.3,14-14s-6.3-14-14-14S19,17.3,19,25z M39,25c0,3.3-2.7,6-6,6s-6-2.7-6-6s2.7-6,6-6   S39,21.7,39,25z" />
        <polygon points="113,83 103,83 103,119 87,119 87,127 111,127 111,91 121,91 121,51 113,51  " />
        <path d="M87,25c0,7.7,6.3,14,14,14s14-6.3,14-14s-6.3-14-14-14S87,17.3,87,25z M101,19c3.3,0,6,2.7,6,6s-2.7,6-6,6s-6-2.7-6-6   S97.7,19,101,19z" />
        <polygon points="31,83 21,83 21,51 13,51 13,91 23,91 23,127 47,127 47,119 31,119  " />
      </g>
    </svg>
  );
  const icon4 = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 128 128"
      width="120"
      height="120"
    >
      <path d="M64,117.47A53.47,53.47,0,1,1,117.47,64,53.54,53.54,0,0,1,64,117.47ZM64,15.53A48.47,48.47,0,1,0,112.47,64,48.52,48.52,0,0,0,64,15.53Z" />
      <path d="M95.71,35.83l-3.55,3.54a37.33,37.33,0,0,1,0,49.26l3.55,3.54a42.34,42.34,0,0,0,0-56.34Z" />
      <path d="M39.37,35.84a37.33,37.33,0,0,1,49.26,0l3.54-3.55a42.34,42.34,0,0,0-56.34,0Z" />
      <path d="M35.84,88.63a37.33,37.33,0,0,1,0-49.26l-3.55-3.54a42.34,42.34,0,0,0,0,56.34Z" />
      <path d="M88.63,92.16a37.33,37.33,0,0,1-49.26,0l-3.54,3.55a42.34,42.34,0,0,0,56.34,0Z" />
      <path d="M84,67.37c-1.39-3.9-6.18-5.49-6.18-5.49a8.71,8.71,0,0,0,3.73-9.09c-.7-4-4.26-7.47-11-7.66V36.47H65.12v8.64H60.59V36.47H55.12v8.64h-8.8v5.45h5.35V77H46.32v5.8h8.8v8.65h5.47V82.76h4.53v8.65h5.47V82.76h1.26C82.51,82.6,86.41,74.09,84,67.37ZM60.73,50.56s2.23,0,5.4,0S72,52.51,72.05,55.5a5.55,5.55,0,0,1-5.67,5.61c-3,0-5.65,0-5.65,0ZM68,77c-3.13.06-7.23,0-7.23,0V66s3.71,0,7,0c3.9-.07,6.77,1.74,6.82,5.18S72.19,76.87,68,77Z" />
    </svg>
  );
  const icon5 = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="120px"
      viewBox="0 0 24 24"
      width="120px"
    >
      <g>
        <path d="M20.9,0H1.1C0.5,0,0,0.5,0,1.1v21.8C0,23.5,0.5,24,1.1,24h19.8c0.6,0,1.1-0.5,1.1-1.1V1.1C22,0.5,21.5,0,20.9,0z M20,22H2   V2h18V22z" />
        <path d="M13,10.4V15l2-1l2,1v-4.6c1.2-0.7,2-2,2-3.4c0-2.2-1.8-4-4-4s-4,1.8-4,4C11,8.5,11.8,9.8,13,10.4z M16,13.3l-1-0.5l-1,0.5   v-2.4c0.3,0.1,0.7,0.1,1,0.1s0.7-0.1,1-0.1V13.3z M15,4c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S13.3,4,15,4z" />
        <rect height="1" width="7" x="5" y="12" />
        <rect height="1" width="7" x="5" y="14" />
        <rect height="1" width="12" x="5" y="16" />
        <rect height="1" width="12" x="5" y="18" />
        <path d="M10.1,6H5v1h5C10,6.7,10,6.3,10.1,6z" />
        <path d="M10.1,8H5v1h5.4C10.3,8.7,10.2,8.3,10.1,8z" />
        <path d="M11,10H5v1h7C11.6,10.7,11.3,10.4,11,10z" />
      </g>
    </svg>
  );
  const datas1: DataType[] = [
    {
      url: icon0,
      descripton:
        "중개업체나 안전 거래 보호 서비스를 제공하여 거래의 안정성을 높일 수 있습니다.",
    },
    {
      url: icon1,
      descripton:
        "원하는 차종, 가격대 등의 조건을 설정하여 최적의 차량을 선택할 수 있습니다.",
    },
    {
      url: icon2,
      descripton:
        "판매 중인 차량의 상세 정보, 가격 정보, 사고 이력 등을 쉽게 확인할 수 있습니다.",
    },
  ];
  const datas2: DataType[] = [
    {
      url: icon3,
      descripton:
        "커뮤니티를 통해 다른 사용자와 공유하고, 원하는 정보를 얻을 수 있습니다.",
    },
    {
      url: icon4,
      descripton:
        "블록체인 기술을 활용하여 거래 과정의 투명성으로 언제나 공개될 수 있습니다.",
    },
    {
      url: icon5,
      descripton: "인증된 차량만 거래하도록 규정하고 있습니다.",
    },
  ];

  const targets = gsap.utils.toArray(".chooseCard");
  useEffect(() => {
    if (!targets) return;

    gsap.registerPlugin(ScrollTrigger);

    gsap.to(".chooseHr", {
      width: "50%",
      duration: 1,
      ease: "circ",
      scrollTrigger: {
        trigger: ".chooseHr",
        scrub: 2,
        start: "-180 50%",
        end: "-180 50%",
        id: "hrTag",
      },
    });
    gsap.from(".chooseCard", {
      y: 100,
      stagger: 0.2,
      opacity: 0,
      scrollTrigger: {
        trigger: ".chooseCard",
        scrub: 4,
        start: "-180 50%",
        end: "-180 50%",
      },
    });
  }, [targets, containerRef]);
  return (
    <div css={container} ref={containerRef}>
      <div className="header">
        <p>왜 카본을 선택해야 하는가?</p>
      </div>
      <hr className="chooseHr" />
      <div className="elements">
        <div className="section">
          {datas1.map((ele: DataType, idx: number): any => (
            <div className="chooseCard" key={idx}>
              {ele.url}
              <p>{ele.descripton}</p>
            </div>
          ))}
        </div>
        <div className="section">
          {datas2.map((ele: DataType, idx: number): any => (
            <div className="chooseCard" key={idx}>
              {ele.url}
              <p>{ele.descripton}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}
